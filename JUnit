package pensionCalc;

import static org.junit.jupiter.api.Assertions.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import org.junit.jupiter.api.Test;

import sem12122.sse3305.service.PensionServiceIMP;

class PensionServiceIMPTest {

	/**************** BLACK BOX TESTING ******************/
	@Test
	void testcase01() { // TC1: Age = 50 Service= 122
		System.out.println("/**************** BLACK BOX TESTING ******************/");
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1951");// tahunlahir 2
		test.add("12"); // 3
		test.add("5"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("12");// harisara 12
		test.add("7");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
		}
	}
	
	@Test
	void testcase02() { // TC2: Age = 60 Service= 108 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1949");// tahunlahir 2
		test.add("12"); // 3
		test.add("5"); // 4
		test.add("2000");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("12");// harisara 12
		test.add("5");// bulansara 13
		test.add("2009");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
		}
	}
	
	@Test
	void testcase03() { // TC3: Age = 30 Service= 144 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1982");// tahunlahir 2
		test.add("12"); // 3
		test.add("5"); // 4
		test.add("2000");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("12");// harisara 12
		test.add("5");// bulansara 13
		test.add("2012");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
		}
	}
	
	@Test
	void testcase04() { // TC4: Age = 25 Service= 96 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1983");// tahunlahir 2
		test.add("12"); // 3
		test.add("5"); // 4
		test.add("2000");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("12");// harisara 12
		test.add("5");// bulansara 13
		test.add("2008");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
		}
	}
	
	@Test
	void testcase05() { // TC5: SCD = 23/1/1961, Gender = 'P', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1941");// tahunlahir
		test.add("23");
		test.add("1");
		test.add("1961");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("1996");// tahunsara
		test.add("P");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 45);
		System.out.println("45 = " + umurbayarpencen);
	}
	
	@Test
	void testcase06() { // TC6: SCD = 24/2/1962, Gender = 'P', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1941");// tahunlahir
		test.add("24");
		test.add("2");
		test.add("1962");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("1996");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 45);
		System.out.println("45 = " + umurbayarpencen);
	}
	
	@Test
	void testcase07() { // TC7: SCD = 25/3/1963, Gender = 'L', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1941");// tahunlahir
		test.add("25");
		test.add("3");
		test.add("1963");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("1996");// tahunsara
		test.add("L");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 45);
		System.out.println("45 = " + umurbayarpencen);
	}
	
	@Test
	void testcase08() { // TC8: SCD = 26/4/1964, Gender = 'L', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1941");// tahunlahir
		test.add("26");
		test.add("4");
		test.add("1964");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("1996");// tahunsara
		test.add("L");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		System.out.println("50 = " + umurbayarpencen);
		assertEquals(umurbayarpencen, 50);
	}
	
	@Test
	void testcase09() { // TC9: SCD = 27/5/1999, Gender = 'P', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");// tahunlahir
		test.add("27");
		test.add("5");
		test.add("1999");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("2019");// tahunsara
		test.add("P");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		System.out.println("50 = " + umurbayarpencen);
		assertEquals(umurbayarpencen, 55);
	}
	
	@Test
	void testcase10() { // TC10: SCD = 27/5/1999, Gender = 'P', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");// tahunlahir
		test.add("27");
		test.add("5");
		test.add("1999");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("2019");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		System.out.println("50 = " + umurbayarpencen);
		assertEquals(umurbayarpencen, 55);
	}
	
	@Test
	void testcase11() { // TC10: SCD = 27/5/1999, Gender = 'L', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");// tahunlahir
		test.add("27");
		test.add("5");
		test.add("1999");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("2019");// tahunsara
		test.add("L");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		System.out.println("50 = " + umurbayarpencen);
		assertEquals(umurbayarpencen, 55);
	}
	
	@Test
	void testcase12() { // TC12: SCD = 27/5/1999, Gender = 'L', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");// tahunlahir
		test.add("27");
		test.add("5");
		test.add("1999");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("23");// harisara
		test.add("1");// bulansara
		test.add("2019");// tahunsara
		test.add("L");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		System.out.println("50 = " + umurbayarpencen);
		assertEquals(umurbayarpencen, 55);
	}
	
	@Test
	void testcase13_a() { // TC13_a: Age = 39 Service= 119 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1962");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("3");// bulansara 13
		test.add("2000");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_b() { // TC13_b: Age = 39 Service= 120 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1962");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_c() { // TC13_c: Age = 39 Service= 121 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1962");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("5");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_d() { // TC13_d: Age = 40 Service= 119 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1961");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("3");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}

	@Test
	void testcase13_e() { // TC13_e: Age = 40 Service= 120 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1961");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_f() { // TC13_f: Age = 40 Service= 121 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1961");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("5");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_g() { // TC13_g: Age = 41 Service= 119 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1960");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("3");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_h() { // TC13_h: Age = 41 Service= 120 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1960");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("5");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase13_i() { // TC13_i: Age = 41 Service= 121 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1960");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("5");// bulansara 13
		test.add("2001");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase14() { // TC14: Age = 60 Service= 131 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1942");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("3");// bulansara 13
		test.add("2002");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase15() { // TC15: Age = 25 Service= 108 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1975");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("2000");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase16() { // TC16: Age = 35 Service= 144 
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1968");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("2003");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase17() { // TC17: Age = 50 Service= 132
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1952");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("2002");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	@Test
	void testcase18() { // TC18: Age = 25 Service= 96
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");// 0
		test.add("1");// 1
		test.add("1974");// tahunlahir 2
		test.add("11"); // 3
		test.add("4"); // 4
		test.add("1991");// tahunkerja 5
		test.add("3000");// gaji akhir dikeluarkan 6
		test.add("1500");// fix allowance 7
		test.add("120");// gajicuti maximum 150 days 8
		test.add("0");// cutihari 9
		test.add("0");// cutibulan 10
		test.add("0");// cutitahun 11
		test.add("11");// harisara 12
		test.add("4");// bulansara 13
		test.add("1999");// tahunsara 14
		test.add("P");// jantina 15
		test.add("N");// istimewa 16
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);

		// calculate month service
		double actPension, actGratuity, actCash;
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		int tmkhidmat_hari = Integer.parseInt(test.get(3));
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));

		double gajiakhir = Double.parseDouble(test.get(6));
		double imbuhantetap = Double.parseDouble(test.get(7));
		double gantiancuti = Double.parseDouble(test.get(8));

		int cuti_bulan = Integer.parseInt(test.get(10));
		int cuti_tahun = Integer.parseInt(test.get(11));

		int tpencen_hari = Integer.parseInt(test.get(12));
		int tpencen_bulan = Integer.parseInt(test.get(13));
		int tpencen_tahun = Integer.parseInt(test.get(14));

		int bulan_cuti_tg = (cuti_tahun * 12) + cuti_bulan;
		minusbulan = 0;
		minustahun = 0;
		plusbulan = 0;

		if (tpencen_hari < tmkhidmat_hari)
			minusbulan = 1;
		if ((tpencen_bulan - minusbulan) < tmkhidmat_bulan) {
			minustahun = 1;
			plusbulan = 12;
		}

		int tbk = tpencen_bulan - minusbulan + plusbulan - tmkhidmat_bulan;
		int ttk = tpencen_tahun - minustahun - tmkhidmat_tahun;

		int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;

		double expPension = Math.round((1.00 / 600.00) * bulankira * gajiakhir);
		double expGratuity = Math.round(0.075 * bulankira * gajiakhir);
		double expCash = Math.round((1.00 / 30.00) * gantiancuti * (gajiakhir + imbuhantetap));

		if (tiadaganjaran.equals("1") || tiadaganjaran.equals("2")) {
			actPension = 0;
			actGratuity = 0;
			actCash = 0;
			assertEquals(0, actPension);
			assertEquals(0, actGratuity);
			assertEquals(0, actCash);
			System.out.println("Not Eligible");
			System.out.println("\n");

		} else {
			actPension = Double.parseDouble(output.get(4));
			actGratuity = Double.parseDouble(output.get(5));
			actCash = Double.parseDouble(output.get(6));
			assertEquals(expPension, actPension);
			assertEquals(expGratuity, actGratuity);
			assertEquals(expCash, actCash);
			System.out.println("Eligible");
			System.out.println(expPension + " = " + actPension);
			System.out.println(expGratuity + " = " + actGratuity);
			System.out.println(expCash + " = " + actCash);
			System.out.println("\n");
		}
	}
	
	/**************** WHITE BOX TESTING ******************/
	@Test
	void WBtestcase01() { //TC1: Tarikh Lahir = 9/11/1969, Tarikh Pencen = 5/7/2019
		ArrayList<String> test = new ArrayList<>();
		test.add("9");
		test.add("11");
		test.add("1969");//tahunlahir
		test.add("1");
		test.add("10");
		test.add("1992");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("5");//harisara
		test.add("7");//bulansara
		test.add("2019");//tahunsara
		test.add("L");//jantina
		test.add("N");//istimewa
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		minustahun = 0;
		if (Integer.parseInt(test.get(12)) < Integer.parseInt(test.get(0)))
			minusbulan = 1;
		if ((Integer.parseInt(test.get(13)) - minusbulan) < Integer.parseInt(test.get(1))) {
			plusbulan = 12;
			minustahun = 1;
		}
		int umursara_bulan = Integer.parseInt(test.get(13)) - minusbulan + plusbulan - Integer.parseInt(test.get(1));
		int umursara_tahun = Integer.parseInt(test.get(14)) - minustahun - Integer.parseInt(test.get(2));
	
		System.out.println("7 =" + umursara_bulan);
		System.out.println("49 =" + umursara_tahun);
		assertEquals(umursara_bulan,7);
		assertEquals(umursara_tahun,49);
		
	}
	
	@Test
	void WBtestcase02() { //TC2: Tarikh Lahir = 5/7/1969, Tarikh Pencen = 9/11/2019
		ArrayList<String> test = new ArrayList<>();
		test.add("5");
		test.add("7");
		test.add("1969");//tahunlahir
		test.add("1");
		test.add("10");
		test.add("1992");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("9");//harisara
		test.add("11");//bulansara
		test.add("2019");//tahunsara
		test.add("L");//jantina
		test.add("N");//istimewa
		int minusbulan = 0;
		int minustahun;
		int plusbulan = 0;

		minustahun = 0;
		if (Integer.parseInt(test.get(12)) < Integer.parseInt(test.get(0)))
			minusbulan = 1;
		if ((Integer.parseInt(test.get(13)) - minusbulan) < Integer.parseInt(test.get(1))) {
			plusbulan = 12;
			minustahun = 1;
		}
		int umursara_bulan = Integer.parseInt(test.get(13)) - minusbulan + plusbulan - Integer.parseInt(test.get(1));
		int umursara_tahun = Integer.parseInt(test.get(14)) - minustahun - Integer.parseInt(test.get(2));
	
		System.out.println("4 =" + umursara_bulan);
		System.out.println("50 =" + umursara_tahun);
		assertEquals(umursara_bulan,4);
		assertEquals(umursara_tahun,50);
		
	}
	
	@Test
	void WBtestcase03() { // TC3: start kerja = 23/3/1991, Gender = 'L', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("3");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("L");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 45);
		System.out.println("45 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase04() { // TC4: start kerja = 23/3/1991, Gender = 'L', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("3");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("L");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 50);
		System.out.println("50 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase05() { // TC5: start kerja = 23/5/1991, Gender = 'L', Special = 'N'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("5");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("L");// jantina
		test.add("N");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 55);
		System.out.println("55 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase15() { // TC15: start kerja = 23/5/1991, Gender = 'L', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("5");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("L");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 55);
		System.out.println("55 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase08() { // TC8: start kerja = 23/3/1991, Gender = 'P', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("3");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("P");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 45);
		System.out.println("45 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase17() { // TC17: start kerja = 23/5/1991, Gender = 'P', Special = 'Y'
		String[] montharray = new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct",
				"Nov", "Dec" };
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1970");// tahunlahir
		test.add("23");
		test.add("5");
		test.add("1991");// tahunkerja
		test.add("3000");// gaji
		test.add("1500");// allowance
		test.add("120");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("2");// bulansara
		test.add("2022");// tahunsara
		test.add("P");// jantina
		test.add("Y");// istimewa
		int tmkhidmat_hari = Integer.parseInt(test.get(3));// tarikh hari start khidmat
		int tmkhidmat_bulan = Integer.parseInt(test.get(4));// bulan start khidmat
		int tmkhidmat_tahun = Integer.parseInt(test.get(5));// tahun start khidmat
		String dateKerja = montharray[tmkhidmat_bulan - 1] + " " + tmkhidmat_hari + ", " + tmkhidmat_tahun;
		Date dateKerja1 = null;
		try {
			dateKerja1 = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(dateKerja);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String sDate1 = "Apr 12, 1991";
		Date tarapril = null;
		try {
			tarapril = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH).parse(sDate1);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int umurbayarpencen = 0;
		if (dateKerja1.before(tarapril)
				&& ((test.get(15).equals("L") && test.get(16).equals("Y")) || test.get(15).equals("P"))) {
			umurbayarpencen = 45;
		} else {
			if (dateKerja1.before(tarapril)) {
				umurbayarpencen = 50;
			} else {
			}
			umurbayarpencen = 55;

		}
		assertEquals(umurbayarpencen, 55);
		System.out.println("55 = " + umurbayarpencen);
	}
	
	@Test
	void WBtestcase18() { //TC18: start kerja = 9/11/1993, tarikh pencen = 5/7/2019
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");//tahunlahir
		test.add("9");//harikerja
		test.add("11");//bulankerja
		test.add("1993");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("5");//harisara
		test.add("7");//bulansara
		test.add("2019");//tahunsara
		test.add("L");//jantina
		test.add("N");//istimewa
		// ***** calculate month working
				int minusbulan = 0;
				int minustahun = 0;
				int plusbulan = 0;
				int bulan_cuti_tg = (Integer.parseInt(test.get(11)) * 12) + Integer.parseInt(test.get(10));

				if (Integer.parseInt(test.get(12)) < Integer.parseInt(test.get(3)))
					minusbulan = 1;
				if ((Integer.parseInt(test.get(13)) - minusbulan) < Integer.parseInt(test.get(4))) {
					minustahun = 1;
					plusbulan = 12;
				}

				int tbk = Integer.parseInt(test.get(13)) - minusbulan + plusbulan - Integer.parseInt(test.get(4));
				int ttk = Integer.parseInt(test.get(14)) - minustahun - Integer.parseInt(test.get(5));

				int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;
				System.out.println("307 =" + bulankira);
				assertEquals(bulankira,307);
	}
	
	@Test
	void WBtestcase20() { //TC20: start kerja = 5/7/1993, tarikh pencen = 9/11/2019
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("1");
		test.add("1964");//tahunlahir
		test.add("5");//harikerja
		test.add("7");//bulankerja
		test.add("1993");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("9");//harisara
		test.add("11");//bulansara
		test.add("2019");//tahunsara
		test.add("L");//jantina
		test.add("N");//istimewa
		// ***** calculate month working
				int minusbulan = 0;
				int minustahun = 0;
				int plusbulan = 0;
				int bulan_cuti_tg = (Integer.parseInt(test.get(11)) * 12) + Integer.parseInt(test.get(10));

				if (Integer.parseInt(test.get(12)) < Integer.parseInt(test.get(3)))
					minusbulan = 1;
				if ((Integer.parseInt(test.get(13)) - minusbulan) < Integer.parseInt(test.get(4))) {
					minustahun = 1;
					plusbulan = 12;
				}

				int tbk = Integer.parseInt(test.get(13)) - minusbulan + plusbulan - Integer.parseInt(test.get(4));
				int ttk = Integer.parseInt(test.get(14)) - minustahun - Integer.parseInt(test.get(5));

				int bulankira = ((ttk * 12) + tbk) - bulan_cuti_tg;
				System.out.println("316 =" + bulankira);
				assertEquals(bulankira,316);
	}
	
	@Test
	void WBtestcase21() { //TC21: pension age = 37, Service = 120
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1964");//tahunlahir
		test.add("18");
		test.add("7");
		test.add("1991");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("18");//harisara
		test.add("7");//bulansara
		test.add("2001");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);
		System.out.println("1 =" + tiadaganjaran);
		assertEquals(tiadaganjaran,"1");
	}
	
	@Test
	void WBtestcase22() { //TC22: pension age = 41, Service = 117
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1960");//tahunlahir
		test.add("18");
		test.add("7");
		test.add("1991");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("18");//harisara
		test.add("4");//bulansara
		test.add("2001");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);
		System.out.println("2 =" + tiadaganjaran);
		assertEquals(tiadaganjaran,"2");
	}
	
	@Test
	void WBtestcase24() { //TC24: pension age = 37, Service = 121
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1964");//tahunlahir
		test.add("18");
		test.add("7");
		test.add("1991");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("18");//harisara
		test.add("8");//bulansara
		test.add("2001");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);
		System.out.println("1 =" + tiadaganjaran);
		assertEquals(tiadaganjaran,"1");
	}
	
	@Test
	void WBtestcase29() { //TC29: pension age = 41, Service = 121
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1960");//tahunlahir
		test.add("18");
		test.add("7");
		test.add("1991");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("18");//harisara
		test.add("8");//bulansara
		test.add("2001");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);
		System.out.println("0 =" + tiadaganjaran);
		assertEquals(tiadaganjaran,"0");
	}
	
	@Test
	void WBtestcase30() { //TC30: pension age = 37, Service = 117
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1964");//tahunlahir
		test.add("18");
		test.add("7");
		test.add("1991");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("18");//harisara
		test.add("4");//bulansara
		test.add("2002");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String tiadaganjaran = output.get(2);
		System.out.println("1 =" + tiadaganjaran);
		assertEquals(tiadaganjaran,"1");
	}
	
	@Test
	void WBtestcase31() { //TC31: Service = 480
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1975");//tahunlahir
		test.add("1");
		test.add("4");
		test.add("1995");//tahunkerja
		test.add("4000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("1");//harisara
		test.add("4");//bulansara
		test.add("2035");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		double PencenMinima;
		double bulankira = Integer.parseInt(output.get(3));
		if (bulankira > 360)
			bulankira = 360;
		
		double jumpenc = (1.00 / 600.00) * bulankira * Double.parseDouble(test.get(6));
		PencenMinima = jumpenc;

		if (PencenMinima < 720)
			PencenMinima = 720;
		if (bulankira < 300)
			PencenMinima = jumpenc;
		System.out.println("2400 = " + Math.round(PencenMinima));
		assertEquals(Math.round(PencenMinima),2400);

	}
	
	@Test
	void WBtestcase32() { //TC31: Service = 136
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1956");//tahunlahir
		test.add("1");
		test.add("4");
		test.add("1995");//tahunkerja
		test.add("3000");//gaji
		test.add("110");//allowance
		test.add("120");//gajicuti
		test.add("0");//cutihari
		test.add("0");//cutibulan
		test.add("0");//cutitahun
		test.add("1");//harisara
		test.add("8");//bulansara
		test.add("2006");//tahunsara
		test.add("P");//jantina
		test.add("N");//istimewa
		ArrayList<String> output = pc.kirapencen(test);
		double PencenMinima;
		double bulankira = Integer.parseInt(output.get(3));
		if (bulankira > 360)
			bulankira = 360;
		
		double jumpenc = (1.00 / 600.00) * bulankira * Double.parseDouble(test.get(6));
		PencenMinima = jumpenc;

		if (PencenMinima < 720)
			PencenMinima = 720;
		if (bulankira < 300)
			PencenMinima = jumpenc;
		System.out.println("680 = " + Math.round(PencenMinima));
		assertEquals(Math.round(PencenMinima),680);

	}
	
	@Test
	void WBtestcase35() { //TC35: Lieu of Leave = 200
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1965");// tahunlahir
		test.add("1");
		test.add("7");
		test.add("2000");// tahunkerja
		test.add("3200");// gaji
		test.add("1500");// allowance
		test.add("200");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("8");// bulansara
		test.add("2022");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		ArrayList<String> output = pc.kirapencen(test);
		Double jumganjarancr = Double.parseDouble(output.get(6));
		System.out.println("23500 = " + jumganjarancr);
		assertEquals(jumganjarancr, 23500.0);
	}
	
	@Test
	void WBtestcase36() { //TC36: Lieu of Leave = 100
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("1");
		test.add("12");
		test.add("1965");// tahunlahir
		test.add("1");
		test.add("7");
		test.add("2000");// tahunkerja
		test.add("3200");// gaji
		test.add("1500");// allowance
		test.add("100");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("8");// bulansara
		test.add("2022");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		ArrayList<String> output = pc.kirapencen(test);
		Double jumganjarancr = Double.parseDouble(output.get(6));
		System.out.println("15666.67 = " + jumganjarancr);
		assertEquals(jumganjarancr, 15666.67);
	}
	
	@Test
	void WBtestcase37() { // TC37: Tarikh lahir = 0/1/1969, Pension age = 55
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("0");
		test.add("1");
		test.add("1969");// tahunlahir
		test.add("1");
		test.add("7");
		test.add("2000");// tahunkerja
		test.add("3000");// gaji
		test.add("110");// allowance
		test.add("100");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("8");// bulansara
		test.add("2010");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String pensionYear = (output.get(7));
		System.out.println("2023 = " + pensionYear.substring(5, 9));
		assertEquals(pensionYear.substring(5, 9), "2023");
		
	}
	
	@Test
	void WBtestcase38() { // TC38: Tarikh lahir = 9/11/1969, Pension age = 55
		PensionServiceIMP pc = new PensionServiceIMP();
		ArrayList<String> test = new ArrayList<>();
		test.add("9");
		test.add("11");
		test.add("1969");// tahunlahir
		test.add("1");
		test.add("7");
		test.add("2000");// tahunkerja
		test.add("3000");// gaji
		test.add("110");// allowance
		test.add("100");// gajicuti
		test.add("0");// cutihari
		test.add("0");// cutibulan
		test.add("0");// cutitahun
		test.add("1");// harisara
		test.add("8");// bulansara
		test.add("2010");// tahunsara
		test.add("P");// jantina
		test.add("N");// istimewa
		ArrayList<String> output = pc.kirapencen(test);
		String pensionYear = (output.get(7));
		System.out.println("2024 = " + pensionYear.substring(5, 9));
		assertEquals(pensionYear.substring(5, 9), "2024");
		
	}
}

	

